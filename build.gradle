/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples
 * This project uses @Incubating APIs which are subject to change.
 */

buildscript {
    repositories {
        maven {
            url 'https://www.jetbrains.com/intellij-repository/releases'
        }
        maven {
            url 'https://cache-redirector.jetbrains.com/intellij-dependencies'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.16.1'
}

repositories {
    maven {
        url 'https://maven.aliyun.com/repository/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/gradle-plugin'
    }
    maven {
        url 'https://www.jetbrains.com/intellij-repository/releases'
    }
    maven {
        url 'https://cache-redirector.jetbrains.com/intellij-dependencies'
    }
    mavenLocal()

}

group 'com.dominicyyds'
version '1.0.0-202'


compileJava {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation 'com.github.jsqlparser:jsqlparser:4.6'
    implementation 'guru.nidi:graphviz-java-all-j2v8:0.18.1'
//    implementation 'com.eclipsesource.j2v8:j2v8_linux_x86_64:4.6.0'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    localPath = 'E:\\idea\\ideaIC-2020.2.1.win'
//    localPath = 'C:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2021.3.1'
    //会自动引入dependencies依赖
    downloadSources = true
//    plugins = ['java', 'com.chrisrm.idea.MaterialThemeUI:4.12']
    plugins = ['java']
//    version = '2020.1.1'
    type = 'IC'

    sandboxDir = './.sandbox/202.1'
}

runIde {
    jvmArgs = ['-Dfile.encoding=UTF-8', '-XX:+IgnoreUnrecognizedVMOptions']
}

signPlugin {
    certificateChainFile = providers.environmentVariable("CERTIFICATE_CHAIN").map {s -> new File(s)}.getOrNull()
    privateKeyFile = providers.environmentVariable("PRIVATE_KEY").map {s -> new File(s)}.getOrNull()
    password = providers.environmentVariable("PRIVATE_KEY_PASSWORD").getOrNull()
}
publishPlugin {
    token = providers.environmentVariable("PUBLISH_TOKEN").getOrNull()
}
buildSearchableOptions {
    jvmArgs = ['-Dfile.encoding=UTF-8', '-XX:+IgnoreUnrecognizedVMOptions']
}
test {
    useJUnitPlatform()
}
